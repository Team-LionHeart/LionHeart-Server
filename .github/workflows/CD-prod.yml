name: Java CD with Gradle on PROD

# main 브랜치에 push 시에 동작
on:
  push:
    branches: [ "main" ]

env:
  S3_BUCKET_NAME: lionheart-s3

jobs:
  build:
    name: Code deployment

    # 실행 환경
    runs-on: ubuntu-latest

    steps:
      # 1) 워크플로우 실행 전 기본적으로 체크아웃 필요
      - name: checkout
        uses: actions/checkout@v3

      # 2) JDK 11버전 설치, 다른 JDK 버전을 사용하다면 수정
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # 3) 프로퍼티 파일 생성
      - name: make application.yml 파일 생성
        run: |
          ## cd application.yml
          cd ./src/main/resources
          
          # application.yml 파일 생성
          touch ./application-prod.yml
          
          # GitHub-Actions 에서 설정한 값을 application.yml 파일에 쓰기
          echo "${{ secrets.PROD_APPLICATION }}" >> ./application-prod.yml
          
          # application.yml 파일 확인
          cat ./application-prod.yml
        shell: bash

      # build
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle # 실제 application build(-x 옵션을 통해 test는 제외)
        run: ./gradlew build -x test

      # 디렉토리 생성
      - name: Make Directory
        run: mkdir -p deploy

      # Jar 파일 복사
      - name: Copy Jar
        run: cp ./lionheart-api/build/libs/*.jar ./deploy

      # appspec.yml 파일 복사
      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy

      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Make zip file
        run: zip -r ./lionheart_server.zip ./deploy
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_PROD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_PROD_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./lionheart_server.zip s3://$S3_BUCKET_NAME/

      # Deploy (codeDeploy 변동 시, run 스크립트 수정)
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PROD_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PROD_SECRET_KEY }}
        run:
          aws deploy create-deployment
          --application-name lionheart-codeDeploy
          --deployment-group-name lionheart-codedeploy-group
          --file-exists-behavior OVERWRITE
          --s3-location bucket=lionheart-s3,bundleType=zip,key=lionheart_server.zip
          --region ap-northeast-2

