# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

# main 브랜치에 push 또는 pull_request 시에 동작
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

# 동작 과정
jobs:
  build:
    
    # ubuntu 최신 버전에서 작동
    runs-on: ubuntu-latest

    steps:
    # 1) 워크플로우 실행 전 기본적으로 체크아웃 필요
    - name: checkout
      uses: actions/checkout@v3
    
    # 2) JDK 11버전 설치, 다른 JDK 버전을 사용하다면 수정
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    # 3) 환경변수 파일 생성
    - name: application.yml 파일 생성
      run: |
        ## create application-prod.yml & create application-dev.yml
        cd ./src/main/resources
        
        # 프로퍼티 파일 생성
        touch ./application-prod.yml ./application-dev.yml
        
        # Github-Secrets에 설정한 값을 프로퍼티 파일에 씌우기
        echo "${{ secrets.PROD_APPLICATION }}" >> ./application-prod.yml
        echo "${{ secrets.DEV_APPLICATION }}" >> ./application-dev.yml
        
        # 프로퍼티 파일 확인
        cat ./application-dev.yml
        cat ./application-prod.yml
      shell: bash
      
    # 이 워크플로우는 gradle build
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle # 실제 application build(-x 옵션을 통해 테스트는 제외)
      run: ./gradlew build -x test
        
    
